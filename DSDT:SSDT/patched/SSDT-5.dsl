/*
 * Intel ACPI Component Architecture
 * AML/ASL+ Disassembler version 20180427 (64-bit version)(RM)
 * Copyright (c) 2000 - 2018 Intel Corporation
 * 
 * Disassembling to non-symbolic legacy ASL operators
 *
 * Disassembly of SSDT-5.aml, Sun Sep 20 06:27:55 2020
 *
 * Original Table Header:
 *     Signature        "SSDT"
 *     Length           0x000007BC (1980)
 *     Revision         0x01
 *     Checksum         0x2F
 *     OEM ID           "XMCC"
 *     OEM Table ID     "XMCC1941"
 *     OEM Revision     0x00003000 (12288)
 *     Compiler ID      "ACPI"
 *     Compiler Version 0x00040000 (262144)
 */
DefinitionBlock ("", "SSDT", 1, "XMCC", "XMCC1941", 0x00003000)
{
    External (_SB_.PCI0, DeviceObj)    // (from opcode)
    External (_SB_.PCI0.LPCB.EC0_.WWED, MethodObj)    // 1 Arguments (from opcode)

    Scope (\_SB.PCI0)
    {
        Device (WMID)
        {
            Name (_HID, "PNP0C14")  // _HID: Hardware ID
            Name (_UID, "XAPe")  // _UID: Unique ID
            OperationRegion (XGNS, SystemMemory, 0x99A7D000, 0x00000024)
            Field (XGNS, AnyAcc, Lock, Preserve)
            {
                MTID,   8, 
                WMIB,   256, 
                CTID,   16, 
                PSSP,   8
            }

            Name (_WDG, Buffer (0x78)
            {
                /* 0000 */  0x13, 0x3E, 0xC9, 0x46, 0x9B, 0xEE, 0x62, 0x42,
                /* 0008 */  0x84, 0x88, 0x56, 0x3B, 0xCA, 0x75, 0x7F, 0xEF,
                /* 0010 */  0x20, 0x00, 0x01, 0x08, 0x45, 0xE2, 0x78, 0xFA,
                /* 0018 */  0x0F, 0x2C, 0xA1, 0x4C, 0x91, 0xCF, 0x15, 0xF3,
                /* 0020 */  0x4E, 0x47, 0x48, 0x50, 0x21, 0x00, 0x01, 0x08,
                /* 0028 */  0x0A, 0xAF, 0xCE, 0x1D, 0x63, 0x4D, 0xBB, 0x44,
                /* 0030 */  0xBD, 0x0C, 0x0D, 0x62, 0x81, 0xBF, 0xDD, 0xC5,
                /* 0038 */  0x22, 0x00, 0x01, 0x08, 0x26, 0x3C, 0x9E, 0x3F,
                /* 0040 */  0x77, 0xB0, 0x86, 0x4F, 0x91, 0xF5, 0x37, 0xFF,
                /* 0048 */  0x64, 0xD8, 0xC7, 0xED, 0x23, 0x00, 0x01, 0x08,
                /* 0050 */  0x48, 0xFB, 0x0B, 0xB6, 0x5B, 0x3E, 0xE4, 0x49,
                /* 0058 */  0xA0, 0xE9, 0x8C, 0xFF, 0xE1, 0xB3, 0x43, 0x4B,
                /* 0060 */  0x41, 0x41, 0x01, 0x02, 0x21, 0x12, 0x90, 0x05,
                /* 0068 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,
                /* 0070 */  0xC9, 0x06, 0x29, 0x10, 0x41, 0x42, 0x01, 0x00 
            })
            Name (EVBU, Buffer (0x08)
            {
                 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Name (MEBU, Buffer (0x20)
            {
                /* 0000 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0008 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0010 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                /* 0018 */  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 
            })
            Method (CLBU, 2, NotSerialized)
            {
                Store (Arg0, Local1)
                Store (Arg1, Local2)
                Add (Local2, Local1, Local2)
                While (One)
                {
                    Store (Zero, Index (EVBU, Local1))
                    Add (Local1, One, Local1)
                    If (LEqual (Local1, Local2))
                    {
                        Break
                    }
                }
            }

            Method (CLMU, 2, NotSerialized)
            {
                Store (Arg0, Local1)
                Store (Arg1, Local2)
                Add (Local2, Local1, Local2)
                While (One)
                {
                    Store (Zero, Index (MEBU, Local1))
                    Add (Local1, One, Local1)
                    If (LEqual (Local1, Local2))
                    {
                        Break
                    }
                }
            }

            OperationRegion (CSPR, SystemIO, PSSP, 0x02)
            Field (CSPR, ByteAcc, NoLock, Preserve)
            {
                WSSP,   8
            }

            Method (WSMI, 2, NotSerialized)
            {
                Store (Arg0, MTID)
                Store (Arg1, WMIB)
                Store (0xD0, WSSP)
            }

            Name (WQAB, Buffer (0x04DD)
            {
                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,
                /* 0008 */  0xCD, 0x04, 0x00, 0x00, 0xF4, 0x1A, 0x00, 0x00,
                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,
                /* 0018 */  0x28, 0x54, 0x8D, 0x00, 0x01, 0x06, 0x18, 0x42,
                /* 0020 */  0x10, 0x0D, 0x10, 0x22, 0x21, 0x04, 0x12, 0x01,
                /* 0028 */  0xA1, 0xC8, 0x2C, 0x0C, 0x86, 0x10, 0x38, 0x2E,
                /* 0030 */  0x84, 0x1C, 0x40, 0x48, 0x1C, 0x14, 0x4A, 0x08,
                /* 0038 */  0x84, 0xFA, 0x13, 0xC8, 0xAF, 0x00, 0x84, 0x0E,
                /* 0040 */  0x05, 0xC8, 0x14, 0x60, 0x50, 0x80, 0x53, 0x04,
                /* 0048 */  0x11, 0xF4, 0x2A, 0xC0, 0xA6, 0x00, 0x93, 0x02,
                /* 0050 */  0x2C, 0x0A, 0xD0, 0x2E, 0xC0, 0xB2, 0x00, 0xDD,
                /* 0058 */  0x02, 0xA4, 0xC3, 0x12, 0x91, 0xE0, 0x28, 0x31,
                /* 0060 */  0xE0, 0x28, 0x9D, 0xD8, 0xC2, 0x0D, 0x1B, 0xBC,
                /* 0068 */  0x50, 0x14, 0xCD, 0x20, 0x4A, 0x82, 0xCA, 0x05,
                /* 0070 */  0xF8, 0x46, 0x10, 0x78, 0xB9, 0x02, 0x24, 0x4F,
                /* 0078 */  0x40, 0x9A, 0x05, 0x18, 0x16, 0x60, 0x5D, 0x80,
                /* 0080 */  0xEC, 0x21, 0x50, 0xA9, 0x43, 0x40, 0xC9, 0x19,
                /* 0088 */  0x02, 0x6A, 0x00, 0xAD, 0x4E, 0x40, 0xF8, 0x95,
                /* 0090 */  0x4E, 0x09, 0x49, 0x10, 0xCE, 0x58, 0xC5, 0xE3,
                /* 0098 */  0x6B, 0x16, 0x4D, 0xCF, 0x49, 0xCE, 0x31, 0xE4,
                /* 00A0 */  0x78, 0x5C, 0xE8, 0x41, 0xF0, 0x48, 0x12, 0x40,
                /* 00A8 */  0x98, 0xF0, 0x21, 0x2B, 0x04, 0x0C, 0x6A, 0xDC,
                /* 00B0 */  0x1E, 0x8B, 0x5D, 0x8C, 0x1A, 0x35, 0x52, 0x36,
                /* 00B8 */  0x20, 0x43, 0x94, 0x04, 0x87, 0x1A, 0xB5, 0x25,
                /* 00C0 */  0x0A, 0x30, 0x3F, 0x0E, 0xCD, 0xAE, 0xED, 0xB1,
                /* 00C8 */  0x10, 0x48, 0x26, 0x6D, 0x28, 0x28, 0x29, 0x10,
                /* 00D0 */  0x1A, 0xDB, 0x99, 0x7A, 0x46, 0x11, 0x8F, 0xD4,
                /* 00D8 */  0x30, 0x09, 0x3C, 0x8A, 0xC8, 0x46, 0xE3, 0xD0,
                /* 00E0 */  0xD8, 0x61, 0x78, 0x98, 0xC1, 0x0E, 0xE2, 0x30,
                /* 00E8 */  0x8E, 0x39, 0x72, 0x02, 0x4F, 0xE8, 0x48, 0x8F,
                /* 00F0 */  0xBC, 0xB0, 0x79, 0x0A, 0x35, 0xC6, 0xD1, 0x1E,
                /* 00F8 */  0x38, 0xFE, 0x28, 0xE0, 0x31, 0x85, 0x3D, 0xDA,
                /* 0100 */  0xD8, 0xE7, 0x6B, 0xE1, 0x83, 0x15, 0xC6, 0x11,
                /* 0108 */  0x1C, 0x57, 0x82, 0xFF, 0xFF, 0xA1, 0x3F, 0x09,
                /* 0110 */  0x30, 0x5F, 0x53, 0xA4, 0x20, 0x2F, 0x06, 0x31,
                /* 0118 */  0xE2, 0x9E, 0xBB, 0xB5, 0x42, 0xE8, 0x58, 0x70,
                /* 0120 */  0x0A, 0x95, 0xCD, 0x42, 0x04, 0x1E, 0xCC, 0x51,
                /* 0128 */  0x60, 0x64, 0x40, 0xC8, 0xF3, 0xA1, 0x40, 0xC3,
                /* 0130 */  0x33, 0x81, 0xDD, 0x8F, 0x47, 0xDA, 0x06, 0x22,
                /* 0138 */  0x73, 0x02, 0x9C, 0x4D, 0x45, 0xC6, 0x30, 0x64,
                /* 0140 */  0x0B, 0x44, 0x08, 0x81, 0x2A, 0x46, 0x11, 0xDC,
                /* 0148 */  0x11, 0xC4, 0x0B, 0x11, 0xE5, 0xF1, 0x21, 0x4C,
                /* 0150 */  0x88, 0x08, 0x51, 0x5A, 0x43, 0x12, 0x66, 0xBC,
                /* 0158 */  0x53, 0xB4, 0x37, 0x1C, 0x41, 0xBC, 0x28, 0xBC,
                /* 0160 */  0x29, 0xD8, 0xFE, 0xE8, 0xD8, 0x4B, 0x42, 0x87,
                /* 0168 */  0x01, 0x47, 0x1A, 0x0D, 0xEA, 0xA4, 0xE0, 0x03,
                /* 0170 */  0x81, 0x07, 0xF6, 0x80, 0xE0, 0xD1, 0x05, 0x0F,
                /* 0178 */  0x12, 0x3F, 0xF4, 0x91, 0x3D, 0x09, 0x78, 0xCC,
                /* 0180 */  0xEC, 0x8A, 0xE0, 0x83, 0x85, 0x8F, 0x06, 0x78,
                /* 0188 */  0xD7, 0x80, 0xBA, 0x13, 0x3C, 0x11, 0x30, 0x41,
                /* 0190 */  0x70, 0xA8, 0x21, 0x7A, 0xD4, 0xE1, 0x4E, 0xE0,
                /* 0198 */  0x10, 0x19, 0xA0, 0xE7, 0xEA, 0xC3, 0x00, 0xEE,
                /* 01A0 */  0x0A, 0x71, 0x32, 0xC7, 0x7D, 0xC8, 0xCD, 0x5E,
                /* 01A8 */  0x23, 0x08, 0xC1, 0xF1, 0xF8, 0x06, 0xC1, 0x26,
                /* 01B0 */  0x9C, 0xC0, 0xF2, 0x07, 0x81, 0x1A, 0x99, 0xA1,
                /* 01B8 */  0x7D, 0x23, 0x38, 0xAD, 0x37, 0x01, 0x1F, 0x24,
                /* 01C0 */  0x4C, 0x60, 0xB1, 0x10, 0x52, 0x00, 0xA1, 0xF1,
                /* 01C8 */  0x80, 0x7F, 0xF0, 0x0F, 0x07, 0xBE, 0x2E, 0x78,
                /* 01D0 */  0xBE, 0x26, 0x28, 0xEA, 0x58, 0x21, 0x23, 0xAB,
                /* 01D8 */  0xF0, 0x78, 0xE8, 0x59, 0xC1, 0xB7, 0x0C, 0xCC,
                /* 01E0 */  0x6D, 0xC1, 0x43, 0xF7, 0x90, 0x9E, 0x0F, 0x1C,
                /* 01E8 */  0xFF, 0xA0, 0x42, 0x45, 0x8D, 0x9C, 0x12, 0xF8,
                /* 01F0 */  0xFF, 0x7F, 0xA2, 0xF0, 0x61, 0x82, 0xC1, 0x06,
                /* 01F8 */  0x0D, 0xEB, 0xC1, 0x9C, 0x93, 0x3F, 0x2C, 0x1E,
                /* 0200 */  0x1B, 0x7C, 0x40, 0xBC, 0xF7, 0x59, 0x93, 0x11,
                /* 0208 */  0x9C, 0xAC, 0x01, 0x3D, 0x89, 0x27, 0x0A, 0xB0,
                /* 0210 */  0x4C, 0xF3, 0x2C, 0x62, 0xBD, 0x18, 0xC4, 0x78,
                /* 0218 */  0x08, 0x88, 0x78, 0x16, 0xA7, 0xC4, 0xCF, 0x29,
                /* 0220 */  0x7C, 0x6C, 0x7C, 0x0C, 0x1E, 0xF3, 0x6B, 0xC0,
                /* 0228 */  0x33, 0x80, 0x61, 0x2C, 0x6B, 0xEC, 0xD0, 0xEF,
                /* 0230 */  0x15, 0x9E, 0xB1, 0xCF, 0x36, 0x96, 0x77, 0xB8,
                /* 0238 */  0x01, 0xC5, 0x75, 0x03, 0xDE, 0xE9, 0x06, 0x78,
                /* 0240 */  0x0C, 0x1A, 0x77, 0xBA, 0x01, 0xC7, 0xB1, 0x80,
                /* 0248 */  0x9D, 0x6C, 0x80, 0xDD, 0xFF, 0xFF, 0x64, 0x03,
                /* 0250 */  0x98, 0x3C, 0xCD, 0x3C, 0xD9, 0x80, 0xE1, 0x50,
                /* 0258 */  0xE0, 0xA3, 0xCC, 0x43, 0xC3, 0xA1, 0x04, 0x3E,
                /* 0260 */  0xA4, 0xA7, 0x99, 0x37, 0x9A, 0x20, 0x07, 0x73,
                /* 0268 */  0x50, 0xC1, 0x9E, 0x6C, 0x3C, 0x38, 0xCF, 0x20,
                /* 0270 */  0xCA, 0xD3, 0x4D, 0x8C, 0x30, 0xA1, 0x0C, 0x12,
                /* 0278 */  0x32, 0xC8, 0x9B, 0x4D, 0xB8, 0xC8, 0x21, 0xA2,
                /* 0280 */  0x3F, 0xDF, 0x18, 0x29, 0xF0, 0x93, 0x0D, 0x60,
                /* 0288 */  0xF2, 0xFF, 0x7F, 0xB2, 0x01, 0x38, 0x7C, 0xDD,
                /* 0290 */  0xF0, 0xC9, 0x06, 0xBC, 0xFF, 0xFF, 0x93, 0x0D,
                /* 0298 */  0xC0, 0x36, 0x84, 0x27, 0x1B, 0x30, 0xDC, 0x11,
                /* 02A0 */  0xA2, 0xBC, 0xBC, 0x78, 0x58, 0xAF, 0x05, 0x67,
                /* 02A8 */  0x14, 0xE3, 0xB5, 0xC6, 0x48, 0xCF, 0x7E, 0x46,
                /* 02B0 */  0x31, 0xC2, 0x7B, 0xC8, 0x4B, 0xA0, 0x21, 0x42,
                /* 02B8 */  0xC5, 0x0B, 0x1A, 0x25, 0x46, 0x3C, 0x4F, 0xE3,
                /* 02C0 */  0x05, 0x22, 0x7A, 0xAC, 0xD0, 0x71, 0x0E, 0xC0,
                /* 02C8 */  0x37, 0x9B, 0x27, 0x1B, 0xB0, 0xFC, 0xFF, 0x4F,
                /* 02D0 */  0x36, 0x00, 0xFF, 0xFF, 0xFF, 0x27, 0x1B, 0xE0,
                /* 02D8 */  0x79, 0xDD, 0xF0, 0xC9, 0x06, 0xE0, 0xE4, 0xFF,
                /* 02E0 */  0xFF, 0x6A, 0x00, 0xE3, 0x28, 0xF3, 0x64, 0x03,
                /* 02E8 */  0x06, 0xC8, 0x97, 0x82, 0x37, 0xBF, 0x33, 0x09,
                /* 02F0 */  0x72, 0x26, 0xAF, 0xC9, 0x3E, 0xD4, 0x78, 0x4E,
                /* 02F8 */  0x0F, 0x7E, 0x11, 0x9E, 0x6C, 0x0C, 0xF7, 0xEA,
                /* 0300 */  0x10, 0xCA, 0x47, 0x40, 0xC3, 0xBC, 0x09, 0x1A,
                /* 0308 */  0xF4, 0x3D, 0xD9, 0x08, 0xB1, 0x9E, 0x71, 0x8C,
                /* 0310 */  0x17, 0x3B, 0x50, 0xFC, 0x28, 0x4F, 0x36, 0x00,
                /* 0318 */  0x03, 0xFF, 0xFF, 0x27, 0x1B, 0x80, 0x0B, 0xD7,
                /* 0320 */  0x0D, 0x9F, 0x6C, 0x00, 0x27, 0xB1, 0x9E, 0x08,
                /* 0328 */  0x3E, 0x95, 0xF8, 0x69, 0x20, 0x41, 0x0B, 0xA7,
                /* 0330 */  0x30, 0x3E, 0xD9, 0x00, 0x87, 0xFF, 0xFF, 0xC9,
                /* 0338 */  0x06, 0x78, 0xE2, 0x3F, 0x38, 0x80, 0x65, 0x80,
                /* 0340 */  0xEC, 0xD8, 0xD0, 0xE3, 0x1D, 0x83, 0x5C, 0x6C,
                /* 0348 */  0x4E, 0x21, 0x88, 0x81, 0x62, 0x05, 0xB1, 0x68,
                /* 0350 */  0x4C, 0x9D, 0x2A, 0xD8, 0xC1, 0x06, 0xF6, 0xF5,
                /* 0358 */  0xE3, 0x55, 0xE6, 0x74, 0xDE, 0xF9, 0x0C, 0xF1,
                /* 0360 */  0x74, 0xEC, 0x0B, 0x8D, 0x07, 0xF0, 0x4A, 0xF3,
                /* 0368 */  0xFA, 0x67, 0xA0, 0xD7, 0x1B, 0x63, 0x44, 0x39,
                /* 0370 */  0xB9, 0x90, 0x51, 0xE2, 0x44, 0x79, 0xA9, 0xF1,
                /* 0378 */  0xC1, 0xC6, 0x38, 0x4F, 0x80, 0x3E, 0x2C, 0x1B,
                /* 0380 */  0xC2, 0x28, 0x0F, 0x36, 0x2C, 0xDA, 0x59, 0x40,
                /* 0388 */  0xDF, 0x26, 0x1F, 0x6C, 0x00, 0xA7, 0xFF, 0xFF,
                /* 0390 */  0x83, 0x0D, 0x70, 0x39, 0x6D, 0xE0, 0x8E, 0x23,
                /* 0398 */  0xF0, 0x06, 0x70, 0x48, 0xCF, 0x09, 0xEC, 0x9A,
                /* 03A0 */  0xC0, 0xC6, 0xC5, 0xEF, 0x0B, 0xEC, 0x40, 0x02,
                /* 03A8 */  0x4C, 0xC4, 0x3F, 0x07, 0x74, 0xCC, 0xB1, 0x70,
                /* 03B0 */  0x10, 0xD9, 0x38, 0xFD, 0x50, 0x0E, 0xCB, 0x5E,
                /* 03B8 */  0xAE, 0x06, 0x84, 0xD3, 0x08, 0xAD, 0xEB, 0x81,
                /* 03C0 */  0x47, 0x84, 0x93, 0x09, 0x29, 0x78, 0x8F, 0xDC,
                /* 03C8 */  0x02, 0x29, 0x24, 0x86, 0x46, 0x43, 0x32, 0x9C,
                /* 03D0 */  0x8F, 0x41, 0x86, 0x33, 0x88, 0x01, 0x9D, 0x0D,
                /* 03D8 */  0x42, 0xA7, 0x22, 0x1C, 0x8B, 0x4F, 0x0D, 0x3E,
                /* 03E0 */  0x65, 0x1C, 0xC6, 0x51, 0xBC, 0x5D, 0xE0, 0xAE,
                /* 03E8 */  0x3A, 0x98, 0x04, 0x10, 0x3A, 0x44, 0x78, 0xA0,
                /* 03F0 */  0x3E, 0x10, 0xF0, 0x33, 0x8A, 0x6F, 0x08, 0x9E,
                /* 03F8 */  0x81, 0x8F, 0x3C, 0xF0, 0xC6, 0x61, 0x35, 0x70,
                /* 0400 */  0x28, 0x68, 0xDF, 0x70, 0x4C, 0xC0, 0x2E, 0x3E,
                /* 0408 */  0xE0, 0xD2, 0x07, 0x8B, 0xF8, 0xFF, 0x5F, 0x0D,
                /* 0410 */  0x60, 0x02, 0xF9, 0x2C, 0xE0, 0xAB, 0xCD, 0xEB,
                /* 0418 */  0x00, 0x9B, 0xC2, 0xDB, 0x8D, 0xD1, 0x8C, 0xCE,
                /* 0420 */  0x25, 0x0D, 0x1B, 0x25, 0x02, 0x46, 0xC3, 0x36,
                /* 0428 */  0x88, 0x87, 0xED, 0x80, 0xC3, 0x46, 0x9F, 0x69,
                /* 0430 */  0xEC, 0x73, 0xD4, 0x64, 0xDA, 0x70, 0x4F, 0x84,
                /* 0438 */  0x1A, 0x37, 0x3D, 0x7D, 0xE0, 0x41, 0x63, 0xFB,
                /* 0440 */  0x58, 0xC1, 0x06, 0x0E, 0x17, 0x0E, 0x3F, 0x70,
                /* 0448 */  0x3E, 0x2E, 0x4F, 0x1C, 0x5C, 0x02, 0x27, 0x0E,
                /* 0450 */  0x72, 0x78, 0x4C, 0x70, 0x08, 0x59, 0x18, 0x0F,
                /* 0458 */  0x1D, 0x16, 0x3F, 0x2E, 0xF8, 0x14, 0xC4, 0x66,
                /* 0460 */  0x8C, 0x3B, 0x93, 0x61, 0x60, 0x3D, 0x5E, 0x0E,
                /* 0468 */  0x6B, 0xB4, 0xB0, 0x67, 0xFF, 0x28, 0xE2, 0x6B,
                /* 0470 */  0x8C, 0x27, 0xE6, 0xF3, 0x9F, 0x0F, 0x30, 0x60,
                /* 0478 */  0x39, 0x9E, 0xC1, 0xFF, 0xFF, 0x1F, 0x8B, 0x80,
                /* 0480 */  0x8F, 0x42, 0x9B, 0x3E, 0x35, 0x1A, 0xB5, 0x6A,
                /* 0488 */  0x50, 0xA6, 0x46, 0x99, 0x06, 0xB5, 0xFA, 0x54,
                /* 0490 */  0x6A, 0xCC, 0x98, 0x92, 0x63, 0x94, 0x97, 0xAB,
                /* 0498 */  0xF1, 0x3A, 0x08, 0x08, 0x8D, 0xF7, 0x50, 0x10,
                /* 04A0 */  0x88, 0xC3, 0x79, 0x00, 0x61, 0xD2, 0x16, 0x24,
                /* 04A8 */  0x10, 0x0B, 0x36, 0x01, 0xC2, 0xE4, 0x2E, 0x4D,
                /* 04B0 */  0x20, 0x0E, 0x0B, 0x42, 0x25, 0xE8, 0x18, 0x3F,
                /* 04B8 */  0x35, 0x02, 0xC2, 0xE4, 0x83, 0xD0, 0x50, 0xEB,
                /* 04C0 */  0x10, 0x88, 0x03, 0x59, 0x39, 0x0A, 0x51, 0x2D,
                /* 04C8 */  0x20, 0x2C, 0x98, 0x17, 0x56, 0x22, 0x20, 0x25,
                /* 04D0 */  0x88, 0x80, 0x1C, 0x74, 0x99, 0x02, 0x72, 0x6C,
                /* 04D8 */  0x10, 0x01, 0xF9, 0xFF, 0x0F                   
            })
            Method (WMAA, 3, NotSerialized)
            {
                Store (0x4141, CTID)
                WSMI (Arg1, Arg2)
                CLMU (Zero, 0x20)
                Store (WMIB, MEBU)
                Return (MEBU)
            }

            Method (EV20, 0, NotSerialized)
            {
                Return (EVBU)
            }

            Method (EV21, 0, NotSerialized)
            {
                CLBU (Zero, 0x08)
                Return (EVBU)
            }

            Method (EV22, 0, NotSerialized)
            {
                CLBU (Zero, 0x08)
                Return (EVBU)
            }

            Method (EV23, 0, NotSerialized)
            {
                CLBU (Zero, 0x08)
                Return (EVBU)
            }

            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event
            {
                If (CondRefOf (\_SB.PCI0.LPCB.EC0.WWED))
                {
                    Return (\_SB.PCI0.LPCB.EC0.WWED (Arg0))
                }

                If (LEqual (Arg0, 0x20))
                {
                    Return (EV20 ())
                }
                ElseIf (LEqual (Arg0, 0x21))
                {
                    Return (EV21 ())
                }
                ElseIf (LEqual (Arg0, 0x22))
                {
                    Return (EV22 ())
                }
                ElseIf (LEqual (Arg0, 0x23))
                {
                    Return (EV23 ())
                }
                Else
                {
                    CLBU (Zero, 0x08)
                    Return (EVBU)
                }
            }
        }
    }
}

